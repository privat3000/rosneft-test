#include <QCoreApplication>
#include <QLocale>
#include <QTranslator>
#include <QSqlDatabase>
#include <QSqlQuery>
#include <QTableView>
#include <QSqlQueryModel>
#include <QSqlRelationalTableModel>
#include <QObject>
#include <QApplication>
#include <QtSql/QSqlRecord>
#include <QDate>
#include <QSqlError>
#include <iostream>

using namespace std;

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);

    QTranslator translator;
    const QStringList uiLanguages = QLocale::system().uiLanguages();
    for (const QString &locale : uiLanguages) {
        const QString baseName = "untitled_" + QLocale(locale).name();
        if (translator.load(":/i18n/" + baseName)) {
            app.installTranslator(&translator);
            break;
        }
    }

    QSqlDatabase db = QSqlDatabase::addDatabase("QODBC");
    db.setDatabaseName("privat_desktop");
    db.setHostName("localhost");
    db.setUserName("priva");
       if (!db.open())
       {
           qDebug() << "драсте";
       }
       qDebug() << "забор покрасте";



//       QSqlQuery query;

//         query.exec("SELECT s.*, ISNULL(t.NAME, '-') as tarrif_name FROM subscriber_tarrif st"
//                     "JOIN tarrif_plan t ON st.TARRIF = t.ID"
//                     "RIGHT OUTER JOIN subscriber s ON st.SUBSCRIBER = s.ID");

//       QSqlTableModel model = QSqlTableModel(0, db);
//       model.setTable("subscriber");          // Имя таблицы базы данных.
//       model.select();

//        QTableView view;
//        view.setModel(&model);
//        view.show();

//        QSqlQuery query1 = QSqlQuery ();
//                       if (!query1.exec("SELECT ACCOUNT_NUMBER, FIRST_NAME, SECOND_NAME, BIRTHDAY, CITY, ADRESS FROM subscriber;")) {
//                              qDebug() << "error SELECT";
//                              qDebug() << query1.lastError().text();


//                          }else{

//                       QSqlRecord rec     = query1.record();

//                           QString    strACCOUNT_NUMBER;
//                           QString    strFIRST_NAME;
//                           QString    strLAST_NAME;
//                           QString    strSECOND_NAME;
//                           QDate      Birthday;
//                           QString    strCity;
//                           QString    strAdress;
//                          // QString    strtarrif_name;

//                           while (query1.next()) {

//                               strACCOUNT_NUMBER  = query1.value(rec.indexOf("ACCOUNT_NUMBER")).toString();
//                               strFIRST_NAME = query1.value(rec.indexOf("FIRST_NAME")).toString();
//                               strLAST_NAME = query1.value(rec.indexOf("LAST_NAME")).toString();
//                               strSECOND_NAME = query1.value(rec.indexOf("SECOND_NAME")).toString();
//                               Birthday = query1.value(rec.indexOf("BIRTHDAY")).toDate();
//                               strCity = query1.value(rec.indexOf("CITY")).toString();
//                               strAdress = query1.value(rec.indexOf("ADRESS")).toString();
//                              // strtarrif_name = query1.value(rec.indexOf("tarrif_name")).toString();

//                               qDebug() << strACCOUNT_NUMBER << " " << strFIRST_NAME << ";\t"
//                                        << strLAST_NAME << ";\t" << strSECOND_NAME
//                                        << Birthday << ";\t" << strCity
//                                        << strAdress; //<< ";\t" << strtarrif_name;
//                           }
//                    }


       if (!db.open()){
               cout << "error" << endl;
             }
           else {
               cout << "Success" << endl;

               QSqlQuery query = QSqlQuery ();

              if(!query.exec("CREATE TABLE IF NOT EXISTS test"
                          " ( id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, name varchar, "
                          "bithday date, gender varchar)")){
                cout << "error table" << endl; }
                else {
                    cout << "Success table" << endl;

                    if(!query.exec("INSERT INTO public.test( "
                                       "name,bithday, gender) "
                                          "VALUES ('anton','1996-12-23','man');")){

                     cout << "error INSERT" << endl;
                    } else {
                        cout << "Success INSERT" << endl;
         QSqlQuery query1 = QSqlQuery ();
                        if (!query1.exec("SELECT * FROM test;")) {
                               qDebug() << "error SELECT";


                           }else{

                        QSqlRecord rec     = query1.record();
                            int        id = 1;
                            QString    strName;
                            QDate    strBithday;
                            QString    strGender;

                            while (query1.next()) {
                                id  = query1.value(rec.indexOf("id")).toInt();
                                strName  = query1.value(rec.indexOf("name")).toString();
                                strBithday = query1.value(rec.indexOf("bithday")).toDate();
                                strGender = query1.value(rec.indexOf("gender")).toString();

                                qDebug() << id << " " << strName << ";\t"
                                         << strBithday << ";\t" << strGender;
                            }

                        }


                        }

                    }

                }
    return app.exec();

}
